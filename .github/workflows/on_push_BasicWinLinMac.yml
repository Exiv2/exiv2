# Basic CI for all platforms on push
# Note that we want to run this as fast as possible and just for the more common configurations. On
# PRs, we will test things more intensively :)
# - Only running UnitTests and not regression tests

on:
  push:
    paths-ignore:
      - "*.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

name: On PUSH - Basic CI for main platforms

jobs:
  windows:
    name: 'Windows 10 - MSVC - Arch:X64 BuildType:Release - SHARED'
    runs-on: windows-2022

    steps:
      - uses: actions/checkout@v4

      - name: Set up Visual Studio shell
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Restore Conan cache
        uses: actions/cache@v4
        with:
          path: ${{github.workspace}}/conanCache
          key: ${{runner.os}}-push-win-${{ hashFiles('conanfile.py') }}

      - name: Install Conan & Common config
        run: |
          python -m pip install conan==1.*
          conan profile new --detect default
          conan profile show default
          conan profile update settings.compiler="Visual Studio" default
          conan profile update settings.compiler.version=17 default
          conan config set storage.path=$Env:GITHUB_WORKSPACE/conanCache

      - name: Build
        run: |
          cmake --preset win-release -S . -B build
          cmake --build build --parallel

      - name: Test
        run: |
          ctest --test-dir build --output-on-failure

  Linux:
    name: 'Ubuntu 22.04 - GCC - Arch:X64 BuildType:Release - SHARED'
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo eatmydata apt-get -y install ninja-build
          python3 -m pip install conan==1.*

      - name: Conan
        run: |
          mkdir build && cd build
          conan profile new --detect default
          conan profile update settings.compiler.libcxx=libstdc++11 default
          conan profile show default
          conan install .. -o webready=True --build missing

      - name: Build
        run: |
          cmake --preset linux-release -S . -B build
          cmake --build build --parallel

      - name: Test
        run: |
          ctest --test-dir build --output-on-failure

  MacOS:
    name: 'macOS - XCode - Arch:${{ matrix.runner.arch }} BuildType:Release - SHARED'
    runs-on: ${{ matrix.runner.os }}
    strategy:
      matrix:
        runner:
          - { os: macos-13,     arch: X64   }
          - { os: macos-latest, arch: ARM64 }

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          brew install ninja inih googletest

      - name: Install fmt on macOS 13
        if: ${{ matrix.runner.os == 'macos-13' }}
        run: |
          brew install fmt

      - name: Build
        run: |
          cmake --preset base_mac -S . -B build
          cmake --build build --parallel

      - name: Test
        run: |
          ctest --test-dir build --output-on-failure
